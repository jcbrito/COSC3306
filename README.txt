This program is based on the classic game asteroids, but many things are different as I made up 
stuff while learning how to use OpenGL and FeeGlut. Most of the shapes are drawn
using the GL_LINES function. This is the first assignment for the class
COSC 3306 (Introduction to computer graphics). This scene was created using simple
shapes and lines. While the scene is displayed, the user can click on the scene to rerun the animation. 
each time the animation runs, the ship and stars will be in different locations. Random colors 
and locations are generated using the C rand() function. 


The ship is made up of 4 different points (a, b, c, d) and are drawn using the 
GL_LINES function. the spaceship has one starting coordinate (X, Y) and all the other points are drawn
relative to that starting coordinate. for example, point a = (X, Y) and point b = (point a X + 50, point a Y + 30). this makes 
it easier to control the movements of the ship as only one set of coordinates needs to be adjusted.

The asteroids are drawn the same way. the only difference is the starting position. Asteroids movement is
fixed, meaning that it will move in one direction until a certain X or Y location is reached, then it will
reverse the direction until another X or Y location is reached and repeat.

The name is made up of glutBitmapCharacter() functions, after some research i found that there is a 
string function which would have been much easier to use, but i decided to keep it as characters since 
a lot of work was put into making it. The color is randomly generated by randomly generating 
3 float numbers between 0 and 1.0 which each represent a value for Red, Green, and Blue. 

The score use the glutBitmapString() to print out a randomly generated integer as the 
score. every time the scene is repainted the value will be between 1000 and 9999 inclusive, so 
a random four-digit number.

Building this scene was not too difficult, but it was a bit time consuming searching for ways the add new
features to it. The animation was achieved by putting the whole myDisplay() function
in a while loop. If i had more time i would of looked for a better way to animate the scene
as this method seems to be unstable. But for now this is what i have and hopefully 
anyone seeing it can enjoy it. once the animation stops the user may click on the 
image to start a new animation with new random values. 

Thank you for reading!


